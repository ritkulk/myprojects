#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov  9 20:03:09 2018
Code to extract VGG16 model features for a set of input images and save it
to a csv
@author: rtwik
"""


from keras.preprocessing import image
from keras.applications.vgg16 import VGG16
from keras.applications.vgg16 import preprocess_input
import numpy as np
import os
import pandas as pd

CURRENT_DIR = os.getcwd()
DATA_DIR = CURRENT_DIR + '/data/'
DATA_FILENAME = 'tweets.csv'
DATA_IMG_DIR = '/mnt/mydisk/wdat/data_images/tweet_images/'
PANG_IMG_DIR = '/mnt/mydisk/wdat/data_images/pangolin/'
RAND_IMG_DIR = '/mnt/mydisk/wdat/data_images/random/'


# creates the model
model = VGG16(weights='imagenet', include_top=False)

data_dict = {'pang': PANG_IMG_DIR, 'rand': RAND_IMG_DIR, 'data_img': DATA_IMG_DIR}

IMG_PATH = PANG_IMG_DIR

def get_vgg_features(label, data_dict):
    '''ouputs features for given input images'''
    IMG_PATH = data_dict[label]
    feature_data = []
    print('getting vgg features for {}'.format(label))
    for name in os.listdir(IMG_PATH):
        img_path = IMG_PATH + name
        try:
            img = image.load_img(img_path, target_size=(224, 224))
            img_data = image.img_to_array(img)
            img_data = np.expand_dims(img_data, axis=0)
            img_data = preprocess_input(img_data)

            vgg16_feature = np.array(model.predict(img_data))
            vgg16_feature = vgg16_feature.flatten()
            feature_data.append([name, vgg16_feature.tolist()])

        except Exception:
            pass

    feature_data = pd.DataFrame(feature_data)
    feature_data.columns = ['name', 'features']
    return  feature_data

for d in data_dict.keys():
    features = get_vgg_features(d, data_dict)
    SAVE_FILENAME = DATA_DIR + d + '_features.csv'
    features.to_csv(SAVE_FILENAME, index=False)
    print('saved {} features to {}'.format(d, SAVE_FILENAME))
